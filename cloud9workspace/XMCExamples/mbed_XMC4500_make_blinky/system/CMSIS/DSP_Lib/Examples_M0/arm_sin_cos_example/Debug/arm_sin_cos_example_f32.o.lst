   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_sin_cos_example_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	testInput_f32
  18              		.section	.rodata
  19              		.align	2
  22              	testInput_f32:
  23 0000 70599FBF 		.word	-1080075920
  24 0004 A16499C0 		.word	-1063689055
  25 0008 54AEB83E 		.word	1052290644
  26 000c 32F3533F 		.word	1062466354
  27 0010 892B53C0 		.word	-1068291191
  28 0014 355B5B40 		.word	1079728949
  29 0018 A1085B40 		.word	1079707809
  30 001c ACD0DDBD 		.word	-1109536596
  31 0020 3C23713F 		.word	1064379196
  32 0024 05AB003F 		.word	1057008389
  33 0028 768F09BF 		.word	-1089892490
  34 002c 2FAF0540 		.word	1074114351
  35 0030 C0B9D8BF 		.word	-1076315712
  36 0034 DB0FC940 		.word	1086918619
  37 0038 C6FBC8BE 		.word	-1094124602
  38 003c 9BE1A73E 		.word	1051189659
  39 0040 4C7D4440 		.word	1078230348
  40 0044 C2B42E3E 		.word	1043248322
  41 0048 DBF08CBE 		.word	-1098059557
  42 004c C14F19C0 		.word	-1072083007
  43 0050 62E9583F 		.word	1062791522
  44 0054 F31C76C0 		.word	-1066001165
  45 0058 87920340 		.word	1073975943
  46 005c E4859540 		.word	1083540964
  47 0060 91D6FEBF 		.word	-1073817967
  48 0064 19091E40 		.word	1075710233
  49 0068 E6F96640 		.word	1080490470
  50 006c 8CC692C0 		.word	-1064122740
  51 0070 E1B484C0 		.word	-1065044767
  52 0074 9F66D23F 		.word	1070753439
  53 0078 974F93BF 		.word	-1080864873
  54 007c DC2EFE3F 		.word	1073622748
  55              		.global	testRefOutput_f32
  56              		.align	2
  59              	testRefOutput_f32:
  60 0080 0000803F 		.word	1065353216
  61              		.global	blockSize
  62              		.data
  63              		.align	2
  66              	blockSize:
  67 0000 20000000 		.word	32
  68              		.comm	testOutput,4,4
  69              		.comm	cosOutput,4,4
  70              		.comm	sinOutput,4,4
  71              		.comm	cosSquareOutput,4,4
  72              		.comm	sinSquareOutput,4,4
  73              		.comm	status,1,1
  74              		.global	__aeabi_fsub
  75              		.global	__aeabi_fcmpgt
  76              		.section	.text.main,"ax",%progbits
  77              		.align	2
  78              		.global	main
  79              		.code	16
  80              		.thumb_func
  82              	main:
  83              	.LFB81:
  84              		.file 1 "../arm_sin_cos_example_f32.c"
   1:../arm_sin_cos_example_f32.c **** /* ----------------------------------------------------------------------
   2:../arm_sin_cos_example_f32.c **** * Copyright (C) 2010-2012 ARM Limited. All rights reserved.
   3:../arm_sin_cos_example_f32.c **** *
   4:../arm_sin_cos_example_f32.c **** * $Date:         17. January 2013
   5:../arm_sin_cos_example_f32.c **** * $Revision:     V1.4.0
   6:../arm_sin_cos_example_f32.c **** *
   7:../arm_sin_cos_example_f32.c **** * Project:       CMSIS DSP Library
   8:../arm_sin_cos_example_f32.c **** * Title:         arm_sin_cos_example_f32.c
   9:../arm_sin_cos_example_f32.c **** *
  10:../arm_sin_cos_example_f32.c **** * Description:   Example code demonstrating sin and cos calculation of input signal.
  11:../arm_sin_cos_example_f32.c **** *
  12:../arm_sin_cos_example_f32.c **** * Target Processor: Cortex-M4/Cortex-M3
  13:../arm_sin_cos_example_f32.c **** *
  14:../arm_sin_cos_example_f32.c **** * Redistribution and use in source and binary forms, with or without
  15:../arm_sin_cos_example_f32.c **** * modification, are permitted provided that the following conditions
  16:../arm_sin_cos_example_f32.c **** * are met:
  17:../arm_sin_cos_example_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../arm_sin_cos_example_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../arm_sin_cos_example_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../arm_sin_cos_example_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../arm_sin_cos_example_f32.c **** *     the documentation and/or other materials provided with the
  22:../arm_sin_cos_example_f32.c **** *     distribution.
  23:../arm_sin_cos_example_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../arm_sin_cos_example_f32.c **** *     may be used to endorse or promote products derived from this
  25:../arm_sin_cos_example_f32.c **** *     software without specific prior written permission.
  26:../arm_sin_cos_example_f32.c **** *
  27:../arm_sin_cos_example_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../arm_sin_cos_example_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../arm_sin_cos_example_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../arm_sin_cos_example_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:../arm_sin_cos_example_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../arm_sin_cos_example_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../arm_sin_cos_example_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../arm_sin_cos_example_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../arm_sin_cos_example_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../arm_sin_cos_example_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../arm_sin_cos_example_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../arm_sin_cos_example_f32.c **** * POSSIBILITY OF SUCH DAMAGE.
  39:../arm_sin_cos_example_f32.c **** * -------------------------------------------------------------------- */
  40:../arm_sin_cos_example_f32.c **** 
  41:../arm_sin_cos_example_f32.c **** /**
  42:../arm_sin_cos_example_f32.c ****  * @ingroup groupExamples
  43:../arm_sin_cos_example_f32.c ****  */
  44:../arm_sin_cos_example_f32.c **** 
  45:../arm_sin_cos_example_f32.c **** /**
  46:../arm_sin_cos_example_f32.c ****  * @defgroup SinCosExample SineCosine Example
  47:../arm_sin_cos_example_f32.c ****  *
  48:../arm_sin_cos_example_f32.c ****  * \par Description:
  49:../arm_sin_cos_example_f32.c ****  * \par
  50:../arm_sin_cos_example_f32.c ****  * Demonstrates the Pythagorean trignometric identity with the use of Cosine, Sine, Vector
  51:../arm_sin_cos_example_f32.c ****  * Multiplication, and Vector Addition functions.
  52:../arm_sin_cos_example_f32.c ****  *
  53:../arm_sin_cos_example_f32.c ****  * \par Algorithm:
  54:../arm_sin_cos_example_f32.c ****  * \par
  55:../arm_sin_cos_example_f32.c ****  * Mathematically, the Pythagorean trignometric identity is defined by the following equation:
  56:../arm_sin_cos_example_f32.c ****  *  <pre>sin(x) * sin(x) + cos(x) * cos(x) = 1</pre>
  57:../arm_sin_cos_example_f32.c ****  * where \c x is the angle in radians.
  58:../arm_sin_cos_example_f32.c ****  *
  59:../arm_sin_cos_example_f32.c ****  * \par Block Diagram:
  60:../arm_sin_cos_example_f32.c ****  * \par
  61:../arm_sin_cos_example_f32.c ****  * \image html sinCos.gif
  62:../arm_sin_cos_example_f32.c ****  *
  63:../arm_sin_cos_example_f32.c ****  * \par Variables Description:
  64:../arm_sin_cos_example_f32.c ****  * \par
  65:../arm_sin_cos_example_f32.c ****  * \li \c testInput_f32 array of input angle in radians
  66:../arm_sin_cos_example_f32.c ****  * \li \c testOutput stores sum of the squares of sine and cosine values of input angle
  67:../arm_sin_cos_example_f32.c ****  *
  68:../arm_sin_cos_example_f32.c ****  * \par CMSIS DSP Software Library Functions Used:
  69:../arm_sin_cos_example_f32.c ****  * \par
  70:../arm_sin_cos_example_f32.c ****  * - arm_cos_f32()
  71:../arm_sin_cos_example_f32.c ****  * - arm_sin_f32()
  72:../arm_sin_cos_example_f32.c ****  * - arm_mult_f32()
  73:../arm_sin_cos_example_f32.c ****  * - arm_add_f32()
  74:../arm_sin_cos_example_f32.c ****  *
  75:../arm_sin_cos_example_f32.c ****  * <b> Refer  </b>
  76:../arm_sin_cos_example_f32.c ****  * \link arm_sin_cos_example_f32.c \endlink
  77:../arm_sin_cos_example_f32.c ****  *
  78:../arm_sin_cos_example_f32.c ****  */
  79:../arm_sin_cos_example_f32.c **** 
  80:../arm_sin_cos_example_f32.c **** 
  81:../arm_sin_cos_example_f32.c **** /** \example arm_sin_cos_example_f32.c
  82:../arm_sin_cos_example_f32.c ****   */
  83:../arm_sin_cos_example_f32.c **** 
  84:../arm_sin_cos_example_f32.c **** #include <math.h>
  85:../arm_sin_cos_example_f32.c **** #include "arm_math.h"
  86:../arm_sin_cos_example_f32.c **** 
  87:../arm_sin_cos_example_f32.c **** /* ----------------------------------------------------------------------
  88:../arm_sin_cos_example_f32.c **** * Defines each of the tests performed
  89:../arm_sin_cos_example_f32.c **** * ------------------------------------------------------------------- */
  90:../arm_sin_cos_example_f32.c **** #define MAX_BLOCKSIZE   32
  91:../arm_sin_cos_example_f32.c **** #define DELTA           (0.000001f)
  92:../arm_sin_cos_example_f32.c **** 
  93:../arm_sin_cos_example_f32.c **** 
  94:../arm_sin_cos_example_f32.c **** /* ----------------------------------------------------------------------
  95:../arm_sin_cos_example_f32.c **** * Test input data for Floating point sin_cos example for 32-blockSize
  96:../arm_sin_cos_example_f32.c **** * Generated by the MATLAB randn() function
  97:../arm_sin_cos_example_f32.c **** * ------------------------------------------------------------------- */
  98:../arm_sin_cos_example_f32.c **** 
  99:../arm_sin_cos_example_f32.c **** const float32_t testInput_f32[MAX_BLOCKSIZE] =
 100:../arm_sin_cos_example_f32.c **** {
 101:../arm_sin_cos_example_f32.c ****   -1.244916875853235400,  -4.793533929171324800,   0.360705030233248850,   0.827929644170887320,  -
 102:../arm_sin_cos_example_f32.c ****    0.941943896490312180,   0.502609575000365850,  -0.537345278736373500,   2.088817392965764500,  -
 103:../arm_sin_cos_example_f32.c ****    3.070147440456292300,   0.170611405884662230,  -0.275275082396073010,  -2.395492805446796300,   
 104:../arm_sin_cos_example_f32.c ****   -1.990923030266425800,   2.469305197656249500,   3.609002606064021000,  -4.586736582331667500,  -
 105:../arm_sin_cos_example_f32.c **** 
 106:../arm_sin_cos_example_f32.c **** 
 107:../arm_sin_cos_example_f32.c **** };
 108:../arm_sin_cos_example_f32.c **** 
 109:../arm_sin_cos_example_f32.c **** const float32_t testRefOutput_f32 = 1.000000000;
 110:../arm_sin_cos_example_f32.c **** 
 111:../arm_sin_cos_example_f32.c **** /* ----------------------------------------------------------------------
 112:../arm_sin_cos_example_f32.c **** * Declare Global variables
 113:../arm_sin_cos_example_f32.c **** * ------------------------------------------------------------------- */
 114:../arm_sin_cos_example_f32.c **** uint32_t blockSize = 32;
 115:../arm_sin_cos_example_f32.c **** float32_t  testOutput;
 116:../arm_sin_cos_example_f32.c **** float32_t  cosOutput;
 117:../arm_sin_cos_example_f32.c **** float32_t  sinOutput;
 118:../arm_sin_cos_example_f32.c **** float32_t  cosSquareOutput;
 119:../arm_sin_cos_example_f32.c **** float32_t  sinSquareOutput;
 120:../arm_sin_cos_example_f32.c **** 
 121:../arm_sin_cos_example_f32.c **** /* ----------------------------------------------------------------------
 122:../arm_sin_cos_example_f32.c **** * Max magnitude FFT Bin test
 123:../arm_sin_cos_example_f32.c **** * ------------------------------------------------------------------- */
 124:../arm_sin_cos_example_f32.c **** 
 125:../arm_sin_cos_example_f32.c **** arm_status status;
 126:../arm_sin_cos_example_f32.c **** 
 127:../arm_sin_cos_example_f32.c **** int32_t main(void)
 128:../arm_sin_cos_example_f32.c **** {
  85              		.loc 1 128 0
  86              		.cfi_startproc
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 82B0     		sub	sp, sp, #8
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 16
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI2:
  97              		.cfi_def_cfa_register 7
 129:../arm_sin_cos_example_f32.c ****   float32_t diff;
 130:../arm_sin_cos_example_f32.c ****   uint32_t i;
 131:../arm_sin_cos_example_f32.c **** 
 132:../arm_sin_cos_example_f32.c ****   for(i=0; i< blockSize; i++)
  98              		.loc 1 132 0
  99 0006 0023     		mov	r3, #0
 100 0008 7B60     		str	r3, [r7, #4]
 101 000a 4DE0     		b	.L2
 102              	.L7:
 133:../arm_sin_cos_example_f32.c ****   {
 134:../arm_sin_cos_example_f32.c ****     cosOutput = arm_cos_f32(testInput_f32[i]);
 103              		.loc 1 134 0
 104 000c 294B     		ldr	r3, .L10
 105 000e 7A68     		ldr	r2, [r7, #4]
 106 0010 9200     		lsl	r2, r2, #2
 107 0012 D358     		ldr	r3, [r2, r3]
 108 0014 181C     		add	r0, r3, #0
 109 0016 FFF7FEFF 		bl	arm_cos_f32
 110 001a 021C     		add	r2, r0, #0
 111 001c 264B     		ldr	r3, .L10+4
 112 001e 1A60     		str	r2, [r3]
 135:../arm_sin_cos_example_f32.c ****     sinOutput = arm_sin_f32(testInput_f32[i]);
 113              		.loc 1 135 0
 114 0020 244B     		ldr	r3, .L10
 115 0022 7A68     		ldr	r2, [r7, #4]
 116 0024 9200     		lsl	r2, r2, #2
 117 0026 D358     		ldr	r3, [r2, r3]
 118 0028 181C     		add	r0, r3, #0
 119 002a FFF7FEFF 		bl	arm_sin_f32
 120 002e 021C     		add	r2, r0, #0
 121 0030 224B     		ldr	r3, .L10+8
 122 0032 1A60     		str	r2, [r3]
 136:../arm_sin_cos_example_f32.c **** 
 137:../arm_sin_cos_example_f32.c ****     arm_mult_f32(&cosOutput, &cosOutput, &cosSquareOutput, 1);
 123              		.loc 1 137 0
 124 0034 2049     		ldr	r1, .L10+4
 125 0036 204A     		ldr	r2, .L10+4
 126 0038 214B     		ldr	r3, .L10+12
 127 003a 081C     		mov	r0, r1
 128 003c 111C     		mov	r1, r2
 129 003e 1A1C     		mov	r2, r3
 130 0040 0123     		mov	r3, #1
 131 0042 FFF7FEFF 		bl	arm_mult_f32
 138:../arm_sin_cos_example_f32.c ****     arm_mult_f32(&sinOutput, &sinOutput, &sinSquareOutput, 1);
 132              		.loc 1 138 0
 133 0046 1D49     		ldr	r1, .L10+8
 134 0048 1C4A     		ldr	r2, .L10+8
 135 004a 1E4B     		ldr	r3, .L10+16
 136 004c 081C     		mov	r0, r1
 137 004e 111C     		mov	r1, r2
 138 0050 1A1C     		mov	r2, r3
 139 0052 0123     		mov	r3, #1
 140 0054 FFF7FEFF 		bl	arm_mult_f32
 139:../arm_sin_cos_example_f32.c **** 
 140:../arm_sin_cos_example_f32.c ****     arm_add_f32(&cosSquareOutput, &sinSquareOutput, &testOutput, 1);
 141              		.loc 1 140 0
 142 0058 1949     		ldr	r1, .L10+12
 143 005a 1A4A     		ldr	r2, .L10+16
 144 005c 1A4B     		ldr	r3, .L10+20
 145 005e 081C     		mov	r0, r1
 146 0060 111C     		mov	r1, r2
 147 0062 1A1C     		mov	r2, r3
 148 0064 0123     		mov	r3, #1
 149 0066 FFF7FEFF 		bl	arm_add_f32
 141:../arm_sin_cos_example_f32.c **** 
 142:../arm_sin_cos_example_f32.c ****     /* absolute value of difference between ref and test */
 143:../arm_sin_cos_example_f32.c ****     diff = fabsf(testRefOutput_f32 - testOutput);
 150              		.loc 1 143 0
 151 006a 184B     		ldr	r3, .L10+24
 152 006c 1A68     		ldr	r2, [r3]
 153 006e 164B     		ldr	r3, .L10+20
 154 0070 1B68     		ldr	r3, [r3]
 155 0072 101C     		add	r0, r2, #0
 156 0074 191C     		add	r1, r3, #0
 157 0076 FFF7FEFF 		bl	__aeabi_fsub
 158 007a 031C     		add	r3, r0, #0
 159 007c 5B00     		lsl	r3, r3, #1
 160 007e 5B08     		lsr	r3, r3, #1
 161 0080 3B60     		str	r3, [r7]
 144:../arm_sin_cos_example_f32.c **** 
 145:../arm_sin_cos_example_f32.c ****     /* Comparison of sin_cos value with reference */
 146:../arm_sin_cos_example_f32.c ****     if(diff > DELTA)
 162              		.loc 1 146 0
 163 0082 3868     		ldr	r0, [r7]
 164 0084 1249     		ldr	r1, .L10+28
 165 0086 FFF7FEFF 		bl	__aeabi_fcmpgt
 166 008a 031C     		mov	r3, r0
 167 008c 002B     		cmp	r3, #0
 168 008e 02D0     		beq	.L3
 169              	.L9:
 147:../arm_sin_cos_example_f32.c ****     {
 148:../arm_sin_cos_example_f32.c ****      status = ARM_MATH_TEST_FAILURE;
 170              		.loc 1 148 0
 171 0090 104B     		ldr	r3, .L10+32
 172 0092 FA22     		mov	r2, #250
 173 0094 1A70     		strb	r2, [r3]
 174              	.L3:
 149:../arm_sin_cos_example_f32.c ****     }
 150:../arm_sin_cos_example_f32.c **** 
 151:../arm_sin_cos_example_f32.c ****     if( status == ARM_MATH_TEST_FAILURE)
 175              		.loc 1 151 0
 176 0096 0F4B     		ldr	r3, .L10+32
 177 0098 1B78     		ldrb	r3, [r3]
 178 009a 5BB2     		sxtb	r3, r3
 179 009c 0633     		add	r3, r3, #6
 180 009e 00D1     		bne	.L5
 181              	.L6:
 152:../arm_sin_cos_example_f32.c ****     {
 153:../arm_sin_cos_example_f32.c ****        while(1);
 182              		.loc 1 153 0 discriminator 1
 183 00a0 FEE7     		b	.L6
 184              	.L5:
 132:../arm_sin_cos_example_f32.c ****   for(i=0; i< blockSize; i++)
 185              		.loc 1 132 0
 186 00a2 7B68     		ldr	r3, [r7, #4]
 187 00a4 0133     		add	r3, r3, #1
 188 00a6 7B60     		str	r3, [r7, #4]
 189              	.L2:
 132:../arm_sin_cos_example_f32.c ****   for(i=0; i< blockSize; i++)
 190              		.loc 1 132 0 is_stmt 0 discriminator 1
 191 00a8 0B4B     		ldr	r3, .L10+36
 192 00aa 1B68     		ldr	r3, [r3]
 193 00ac 7A68     		ldr	r2, [r7, #4]
 194 00ae 9A42     		cmp	r2, r3
 195 00b0 ACD3     		bcc	.L7
 196              	.L8:
 154:../arm_sin_cos_example_f32.c ****     }
 155:../arm_sin_cos_example_f32.c **** 
 156:../arm_sin_cos_example_f32.c ****   }
 157:../arm_sin_cos_example_f32.c **** 
 158:../arm_sin_cos_example_f32.c ****   while(1);                             /* main function does not return */
 197              		.loc 1 158 0 is_stmt 1 discriminator 1
 198 00b2 FEE7     		b	.L8
 199              	.L11:
 200              		.align	2
 201              	.L10:
 202 00b4 00000000 		.word	testInput_f32
 203 00b8 00000000 		.word	cosOutput
 204 00bc 00000000 		.word	sinOutput
 205 00c0 00000000 		.word	cosSquareOutput
 206 00c4 00000000 		.word	sinSquareOutput
 207 00c8 00000000 		.word	testOutput
 208 00cc 00000000 		.word	testRefOutput_f32
 209 00d0 BD378635 		.word	897988541
 210 00d4 00000000 		.word	status
 211 00d8 00000000 		.word	blockSize
 212              		.cfi_endproc
 213              	.LFE81:
 215              		.text
 216              	.Letext0:
 217              		.file 2 "c:\\dave-3.1\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/incl
 218              		.file 3 "C:\\DAVE-3.1\\eclipse\\/../CMSIS/Include/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_sin_cos_example_f32.c
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:22     .rodata:00000000 testInput_f32
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:19     .rodata:00000000 $d
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:59     .rodata:00000080 testRefOutput_f32
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:66     .data:00000000 blockSize
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:63     .data:00000000 $d
                            *COM*:00000004 testOutput
                            *COM*:00000004 cosOutput
                            *COM*:00000004 sinOutput
                            *COM*:00000004 cosSquareOutput
                            *COM*:00000004 sinSquareOutput
                            *COM*:00000001 status
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:77     .text.main:00000000 $t
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:82     .text.main:00000000 main
C:\Users\wangguan\AppData\Local\Temp\cc2e0yYd.s:202    .text.main:000000b4 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e2c96d5a5488b60ca900a5e0ea7772ef
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.arm_math.h.265.70d56e5033e2760c278cbebe073db4fc
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.arm_math.h.275.48de47ab2bd311f0657ea6a8c1abb55a
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.arm_math.h.297.1d5f7b8b87e168258299acd0bbe0005e

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fcmpgt
arm_cos_f32
arm_sin_f32
arm_mult_f32
arm_add_f32
