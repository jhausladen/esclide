   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"arm_fft_bin_example_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	testOutput:
  22 0000 00000000 		.space	4096
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.global	fftSize
  24              		.data
  25              		.align	2
  28              	fftSize:
  29 0000 00040000 		.word	1024
  30              		.global	ifftFlag
  31              		.bss
  32              		.align	2
  35              	ifftFlag:
  36 1000 00000000 		.space	4
  37              		.global	doBitReverse
  38              		.data
  39              		.align	2
  42              	doBitReverse:
  43 0004 01000000 		.word	1
  44              		.global	refIndex
  45              		.align	2
  48              	refIndex:
  49 0008 D5000000 		.word	213
  50              		.global	testIndex
  51              		.bss
  52              		.align	2
  55              	testIndex:
  56 1004 00000000 		.space	4
  57              		.section	.text.main,"ax",%progbits
  58              		.align	2
  59              		.global	main
  60              		.thumb
  61              		.thumb_func
  63              	main:
  64              	.LFB128:
  65              		.file 1 "../arm_fft_bin_example_f32.c"
   1:../arm_fft_bin_example_f32.c **** /* ---------------------------------------------------------------------- 
   2:../arm_fft_bin_example_f32.c **** * Copyright (C) 2010 ARM Limited. All rights reserved.   
   3:../arm_fft_bin_example_f32.c **** *  
   4:../arm_fft_bin_example_f32.c **** * $Date:        29. November 2010  
   5:../arm_fft_bin_example_f32.c **** * $Revision: 	V1.0.3  
   6:../arm_fft_bin_example_f32.c **** *  
   7:../arm_fft_bin_example_f32.c **** * Project: 	    CMSIS DSP Library  
   8:../arm_fft_bin_example_f32.c **** * Title:	    arm_fft_bin_example_f32.c		  
   9:../arm_fft_bin_example_f32.c **** *  
  10:../arm_fft_bin_example_f32.c **** * Description:	Example code demonstrating calculation of Max energy bin of  
  11:../arm_fft_bin_example_f32.c **** *				frequency domain of input signal. 
  12:../arm_fft_bin_example_f32.c **** * 
  13:../arm_fft_bin_example_f32.c **** * Target Processor: Cortex-M4/Cortex-M3  
  14:../arm_fft_bin_example_f32.c **** *
  15:../arm_fft_bin_example_f32.c **** *
  16:../arm_fft_bin_example_f32.c **** * Version 1.0.3 2010/11/29 
  17:../arm_fft_bin_example_f32.c **** *    Re-organized the CMSIS folders and updated documentation. 
  18:../arm_fft_bin_example_f32.c **** * 
  19:../arm_fft_bin_example_f32.c **** * Version 1.0.1 2010/10/05 KK 
  20:../arm_fft_bin_example_f32.c **** *    Production release and review comments incorporated.  
  21:../arm_fft_bin_example_f32.c **** *
  22:../arm_fft_bin_example_f32.c **** * Version 1.0.0 2010/09/20 KK
  23:../arm_fft_bin_example_f32.c **** *    Production release and review comments incorporated.
  24:../arm_fft_bin_example_f32.c **** * ------------------------------------------------------------------- */ 
  25:../arm_fft_bin_example_f32.c ****  
  26:../arm_fft_bin_example_f32.c **** /** 
  27:../arm_fft_bin_example_f32.c ****  * @ingroup groupExamples 
  28:../arm_fft_bin_example_f32.c ****  */ 
  29:../arm_fft_bin_example_f32.c ****  
  30:../arm_fft_bin_example_f32.c **** /**    
  31:../arm_fft_bin_example_f32.c ****  * @defgroup FrequencyBin Frequency Bin Example    
  32:../arm_fft_bin_example_f32.c ****  * 
  33:../arm_fft_bin_example_f32.c ****  * \par Description
  34:../arm_fft_bin_example_f32.c ****  * \par
  35:../arm_fft_bin_example_f32.c ****  * Demonstrates the calculation of the maximum energy bin in the frequency 
  36:../arm_fft_bin_example_f32.c ****  * domain of the input signal with the use of Complex FFT, Complex 
  37:../arm_fft_bin_example_f32.c ****  * Magnitude, and Maximum functions. 
  38:../arm_fft_bin_example_f32.c ****  * 
  39:../arm_fft_bin_example_f32.c ****  * \par Algorithm:
  40:../arm_fft_bin_example_f32.c ****  * \par
  41:../arm_fft_bin_example_f32.c ****  * The input test signal contains a 10 kHz signal with uniformly distributed white noise.  
  42:../arm_fft_bin_example_f32.c ****  * Calculating the FFT of the input signal will give us the maximum energy of the 
  43:../arm_fft_bin_example_f32.c ****  * bin corresponding to the input frequency of 10 kHz.  
  44:../arm_fft_bin_example_f32.c ****  * 
  45:../arm_fft_bin_example_f32.c ****  * \par Block Diagram:
  46:../arm_fft_bin_example_f32.c ****  * \image html FFTBin.gif "Block Diagram"
  47:../arm_fft_bin_example_f32.c ****  * \par
  48:../arm_fft_bin_example_f32.c ****  * The figure below shows the time domain signal of 10 kHz signal with 
  49:../arm_fft_bin_example_f32.c ****  * uniformly distributed white noise, and the next figure shows the input
  50:../arm_fft_bin_example_f32.c ****  * in the frequency domain. The bin with maximum energy corresponds to 10 kHz signal. 
  51:../arm_fft_bin_example_f32.c ****  * \par
  52:../arm_fft_bin_example_f32.c ****  * \image html FFTBinInput.gif "Input signal in Time domain" 
  53:../arm_fft_bin_example_f32.c ****  * \image html FFTBinOutput.gif "Input signal in Frequency domain"
  54:../arm_fft_bin_example_f32.c ****  *
  55:../arm_fft_bin_example_f32.c ****  * \par Variables Description:
  56:../arm_fft_bin_example_f32.c ****  * \par
  57:../arm_fft_bin_example_f32.c ****  * \li \c testInput_f32_10khz points to the input data
  58:../arm_fft_bin_example_f32.c ****  * \li \c testOutput points to the output data
  59:../arm_fft_bin_example_f32.c ****  * \li \c fftSize length of FFT
  60:../arm_fft_bin_example_f32.c ****  * \li \c ifftFlag flag for the selection of CFFT/CIFFT
  61:../arm_fft_bin_example_f32.c ****  * \li \c doBitReverse Flag for selection of normal order or bit reversed order
  62:../arm_fft_bin_example_f32.c ****  * \li \c refIndex reference index value at which maximum energy of bin ocuurs
  63:../arm_fft_bin_example_f32.c ****  * \li \c testIndex calculated index value at which maximum energy of bin ocuurs
  64:../arm_fft_bin_example_f32.c ****  * 
  65:../arm_fft_bin_example_f32.c ****  * \par CMSIS DSP Software Library Functions Used:
  66:../arm_fft_bin_example_f32.c ****  * \par
  67:../arm_fft_bin_example_f32.c ****  * - arm_cfft_radix4_init_f32()
  68:../arm_fft_bin_example_f32.c ****  * - arm_cfft_radix4_f32()
  69:../arm_fft_bin_example_f32.c ****  * - arm_cmplx_mag_f32()
  70:../arm_fft_bin_example_f32.c ****  * - arm_max_f32()
  71:../arm_fft_bin_example_f32.c ****  *
  72:../arm_fft_bin_example_f32.c ****  * <b> Refer  </b> 
  73:../arm_fft_bin_example_f32.c ****  * \link arm_fft_bin_example_f32.c \endlink
  74:../arm_fft_bin_example_f32.c ****  * 
  75:../arm_fft_bin_example_f32.c ****  */ 
  76:../arm_fft_bin_example_f32.c ****  
  77:../arm_fft_bin_example_f32.c ****  
  78:../arm_fft_bin_example_f32.c **** /** \example arm_fft_bin_example_f32.c 
  79:../arm_fft_bin_example_f32.c ****   */  
  80:../arm_fft_bin_example_f32.c **** 
  81:../arm_fft_bin_example_f32.c ****      
  82:../arm_fft_bin_example_f32.c **** #include "arm_math.h" 
  83:../arm_fft_bin_example_f32.c ****  
  84:../arm_fft_bin_example_f32.c **** #define TEST_LENGTH_SAMPLES 2048 
  85:../arm_fft_bin_example_f32.c ****  
  86:../arm_fft_bin_example_f32.c **** /* ------------------------------------------------------------------- 
  87:../arm_fft_bin_example_f32.c **** * External Input and Output buffer Declarations for FFT Bin Example 
  88:../arm_fft_bin_example_f32.c **** * ------------------------------------------------------------------- */ 
  89:../arm_fft_bin_example_f32.c **** extern float32_t testInput_f32_10khz[TEST_LENGTH_SAMPLES]; 
  90:../arm_fft_bin_example_f32.c **** static float32_t testOutput[TEST_LENGTH_SAMPLES/2]; 
  91:../arm_fft_bin_example_f32.c ****  
  92:../arm_fft_bin_example_f32.c **** /* ------------------------------------------------------------------ 
  93:../arm_fft_bin_example_f32.c **** * Global variables for FFT Bin Example 
  94:../arm_fft_bin_example_f32.c **** * ------------------------------------------------------------------- */ 
  95:../arm_fft_bin_example_f32.c **** uint32_t fftSize = 1024; 
  96:../arm_fft_bin_example_f32.c **** uint32_t ifftFlag = 0; 
  97:../arm_fft_bin_example_f32.c **** uint32_t doBitReverse = 1; 
  98:../arm_fft_bin_example_f32.c ****  
  99:../arm_fft_bin_example_f32.c **** /* Reference index at which max energy of bin ocuurs */ 
 100:../arm_fft_bin_example_f32.c **** uint32_t refIndex = 213, testIndex = 0; 
 101:../arm_fft_bin_example_f32.c ****  
 102:../arm_fft_bin_example_f32.c **** /* ---------------------------------------------------------------------- 
 103:../arm_fft_bin_example_f32.c **** * Max magnitude FFT Bin test 
 104:../arm_fft_bin_example_f32.c **** * ------------------------------------------------------------------- */ 
 105:../arm_fft_bin_example_f32.c ****  
 106:../arm_fft_bin_example_f32.c **** int main(void)
 107:../arm_fft_bin_example_f32.c **** { 
  66              		.loc 1 107 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 32
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 88B0     		sub	sp, sp, #32
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 40
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI2:
  80              		.cfi_def_cfa_register 7
 108:../arm_fft_bin_example_f32.c ****    
 109:../arm_fft_bin_example_f32.c **** 	arm_status status; 
 110:../arm_fft_bin_example_f32.c **** 	arm_cfft_radix4_instance_f32 S; 
 111:../arm_fft_bin_example_f32.c **** 	float32_t maxValue; 
 112:../arm_fft_bin_example_f32.c **** 	 
 113:../arm_fft_bin_example_f32.c **** 	status = ARM_MATH_SUCCESS; 
  81              		.loc 1 113 0
  82 0006 4FF00003 		mov	r3, #0
  83 000a FB77     		strb	r3, [r7, #31]
 114:../arm_fft_bin_example_f32.c **** 	 
 115:../arm_fft_bin_example_f32.c **** 	/* Initialize the CFFT/CIFFT module */  
 116:../arm_fft_bin_example_f32.c **** 	status = arm_cfft_radix4_init_f32(&S, fftSize,  
  84              		.loc 1 116 0
  85 000c 40F20003 		movw	r3, #:lower16:fftSize
  86 0010 C0F20003 		movt	r3, #:upper16:fftSize
  87 0014 1B68     		ldr	r3, [r3, #0]
  88 0016 99B2     		uxth	r1, r3
  89 0018 40F20003 		movw	r3, #:lower16:ifftFlag
  90 001c C0F20003 		movt	r3, #:upper16:ifftFlag
  91 0020 1B68     		ldr	r3, [r3, #0]
  92 0022 DAB2     		uxtb	r2, r3
  93 0024 40F20003 		movw	r3, #:lower16:doBitReverse
  94 0028 C0F20003 		movt	r3, #:upper16:doBitReverse
  95 002c 1B68     		ldr	r3, [r3, #0]
  96 002e DBB2     		uxtb	r3, r3
  97 0030 07F10800 		add	r0, r7, #8
  98 0034 FFF7FEFF 		bl	arm_cfft_radix4_init_f32
  99 0038 0346     		mov	r3, r0
 100 003a FB77     		strb	r3, [r7, #31]
 117:../arm_fft_bin_example_f32.c **** 	  								ifftFlag, doBitReverse); 
 118:../arm_fft_bin_example_f32.c **** 	 
 119:../arm_fft_bin_example_f32.c **** 	/* Process the data through the CFFT/CIFFT module */ 
 120:../arm_fft_bin_example_f32.c **** 	arm_cfft_radix4_f32(&S, testInput_f32_10khz); 
 101              		.loc 1 120 0
 102 003c 07F10803 		add	r3, r7, #8
 103 0040 1846     		mov	r0, r3
 104 0042 40F20001 		movw	r1, #:lower16:testInput_f32_10khz
 105 0046 C0F20001 		movt	r1, #:upper16:testInput_f32_10khz
 106 004a FFF7FEFF 		bl	arm_cfft_radix4_f32
 121:../arm_fft_bin_example_f32.c **** 	 
 122:../arm_fft_bin_example_f32.c **** 	 
 123:../arm_fft_bin_example_f32.c **** 	/* Process the data through the Complex Magnitude Module for  
 124:../arm_fft_bin_example_f32.c **** 	calculating the magnitude at each bin */ 
 125:../arm_fft_bin_example_f32.c **** 	arm_cmplx_mag_f32(testInput_f32_10khz, testOutput,  
 107              		.loc 1 125 0
 108 004e 40F20003 		movw	r3, #:lower16:fftSize
 109 0052 C0F20003 		movt	r3, #:upper16:fftSize
 110 0056 1B68     		ldr	r3, [r3, #0]
 111 0058 40F20000 		movw	r0, #:lower16:testInput_f32_10khz
 112 005c C0F20000 		movt	r0, #:upper16:testInput_f32_10khz
 113 0060 40F20001 		movw	r1, #:lower16:testOutput
 114 0064 C0F20001 		movt	r1, #:upper16:testOutput
 115 0068 1A46     		mov	r2, r3
 116 006a FFF7FEFF 		bl	arm_cmplx_mag_f32
 126:../arm_fft_bin_example_f32.c **** 	  				fftSize);  
 127:../arm_fft_bin_example_f32.c **** 	 
 128:../arm_fft_bin_example_f32.c **** 	/* Calculates maxValue and returns corresponding BIN value */ 
 129:../arm_fft_bin_example_f32.c **** 	arm_max_f32(testOutput, fftSize, &maxValue, &testIndex); 
 117              		.loc 1 129 0
 118 006e 40F20003 		movw	r3, #:lower16:fftSize
 119 0072 C0F20003 		movt	r3, #:upper16:fftSize
 120 0076 1A68     		ldr	r2, [r3, #0]
 121 0078 07F10403 		add	r3, r7, #4
 122 007c 40F20000 		movw	r0, #:lower16:testOutput
 123 0080 C0F20000 		movt	r0, #:upper16:testOutput
 124 0084 1146     		mov	r1, r2
 125 0086 1A46     		mov	r2, r3
 126 0088 40F20003 		movw	r3, #:lower16:testIndex
 127 008c C0F20003 		movt	r3, #:upper16:testIndex
 128 0090 FFF7FEFF 		bl	arm_max_f32
 130:../arm_fft_bin_example_f32.c **** 	 
 131:../arm_fft_bin_example_f32.c **** 	if(testIndex !=  refIndex) 
 129              		.loc 1 131 0
 130 0094 40F20003 		movw	r3, #:lower16:testIndex
 131 0098 C0F20003 		movt	r3, #:upper16:testIndex
 132 009c 1A68     		ldr	r2, [r3, #0]
 133 009e 40F20003 		movw	r3, #:lower16:refIndex
 134 00a2 C0F20003 		movt	r3, #:upper16:refIndex
 135 00a6 1B68     		ldr	r3, [r3, #0]
 136 00a8 9A42     		cmp	r2, r3
 137 00aa 02D0     		beq	.L2
 132:../arm_fft_bin_example_f32.c **** 	{ 
 133:../arm_fft_bin_example_f32.c **** 		status = ARM_MATH_TEST_FAILURE; 
 138              		.loc 1 133 0
 139 00ac 4FF0FA03 		mov	r3, #250
 140 00b0 FB77     		strb	r3, [r7, #31]
 141              	.L2:
 134:../arm_fft_bin_example_f32.c **** 	} 
 135:../arm_fft_bin_example_f32.c **** 	 
 136:../arm_fft_bin_example_f32.c **** 	/* ---------------------------------------------------------------------- 
 137:../arm_fft_bin_example_f32.c **** 	** Loop here if the signals fail the PASS check. 
 138:../arm_fft_bin_example_f32.c **** 	** This denotes a test failure 
 139:../arm_fft_bin_example_f32.c **** 	** ------------------------------------------------------------------- */ 
 140:../arm_fft_bin_example_f32.c **** 	 
 141:../arm_fft_bin_example_f32.c **** 	if( status != ARM_MATH_SUCCESS) 
 142              		.loc 1 141 0
 143 00b2 97F91F30 		ldrsb	r3, [r7, #31]
 144 00b6 002B     		cmp	r3, #0
 145 00b8 00D0     		beq	.L3
 146              	.L4:
 142:../arm_fft_bin_example_f32.c **** 	{ 
 143:../arm_fft_bin_example_f32.c **** 		while(1); 
 147              		.loc 1 143 0 discriminator 1
 148 00ba FEE7     		b	.L4
 149              	.L3:
 144:../arm_fft_bin_example_f32.c **** 	} 
 145:../arm_fft_bin_example_f32.c **** 
 146:../arm_fft_bin_example_f32.c ****     while(1);                             /* main function does not return */
 150              		.loc 1 146 0 discriminator 1
 151 00bc FEE7     		b	.L3
 152              		.cfi_endproc
 153              	.LFE128:
 155 00be 00BF     		.text
 156              	.Letext0:
 157              		.file 2 "c:\\dave-3.1\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/incl
 158              		.file 3 "C:\\DAVE-3.1\\eclipse\\/../CMSIS/Include/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fft_bin_example_f32.c
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:20     .bss:00000000 $d
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:21     .bss:00000000 testOutput
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:28     .data:00000000 fftSize
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:25     .data:00000000 $d
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:35     .bss:00001000 ifftFlag
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:42     .data:00000004 doBitReverse
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:48     .data:00000008 refIndex
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:55     .bss:00001004 testIndex
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:58     .text.main:00000000 $t
C:\Users\wangguan\AppData\Local\Temp\cciHxEF1.s:63     .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.250eef6c7a6ea7970222e5d8b37d2f0a
                           .group:00000000 wm4.arm_math.h.265.70d56e5033e2760c278cbebe073db4fc
                           .group:00000000 wm4.core_cm4.h.47.5b17071cb0e0984e786cc7d50cfa4aef
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.arm_math.h.297.9b8078faaef2b2639f9d65032d7e0d70

UNDEFINED SYMBOLS
arm_cfft_radix4_init_f32
testInput_f32_10khz
arm_cfft_radix4_f32
arm_cmplx_mag_f32
arm_max_f32
